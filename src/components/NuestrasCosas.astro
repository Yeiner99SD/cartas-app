---
import { supabase } from '../lib/supabase.client';

// Obtener todas las fotos al cargar la página
const { data: photos } = await supabase
  .from('photos')
  .select('*')
  .order('created_at', { ascending: false });
---

<section class="min-h-screen p-8">
  <div class="max-w-6xl mx-auto">
    <h1 class="text-3xl font-semibold text-white mb-8 text-center">Nuestras Fotos</h1>

    <!-- Formulario para subir fotos -->
    <div class="mb-12 bg-white/10 p-6 rounded-lg">
      <form id="photo-form" class="flex flex-col items-center gap-4">
        <label class="w-full max-w-md">
          <div class="bg-purple-600 text-white px-6 py-4 rounded-lg text-center cursor-pointer hover:bg-purple-700 transition-colors">
            Seleccionar Foto
            <input 
              type="file" 
              accept="image/*" 
              class="hidden" 
              id="file-input"
            />
          </div>
        </label>
        <button
          type="submit"
          class="bg-white text-purple-600 px-8 py-3 rounded-lg font-medium hover:bg-purple-100 transition-colors disabled:opacity-50"
          id="submit-button"
          disabled
        >
          Subir Foto
        </button>
      </form>
    </div>

    <!-- Grid de fotos -->
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6" id="photos-grid">
      {photos?.map((photo) => (
        <div class="relative aspect-square bg-white/10 rounded-lg overflow-hidden group">
          <img 
            src={photo.url} 
            alt="Nuestra foto" 
            class="w-full h-full object-cover"
            loading="lazy"
          />
          <div class="absolute inset-0 bg-black/60 opacity-0 group-hover:opacity-100 transition-opacity">
            <p class="absolute bottom-4 left-4 text-white text-sm">
              {new Date(photo.created_at).toLocaleDateString()}
            </p>
          </div>
        </div>
      ))}
    </div>
  </div>
</section>

<script type="module" define:vars={{supabaseUrl: import.meta.env.PUBLIC_SUPABASE_URL, supabaseKey: import.meta.env.PUBLIC_SUPABASE_ANON_KEY}}>
  import { createClient } from 'https://cdn.jsdelivr.net/npm/@supabase/supabase-js/+esm';

  const supabase = createClient(supabaseUrl, supabaseKey);

  const form = document.getElementById('photo-form');
  const fileInput = document.getElementById('file-input');
  const submitButton = document.getElementById('submit-button');
  const photosGrid = document.getElementById('photos-grid');

  if (form && fileInput && submitButton && photosGrid) {
    // Habilitar/deshabilitar botón según selección de archivo
    fileInput.addEventListener('change', () => {
      submitButton.disabled = !fileInput.files?.length;
    });

    form.addEventListener('submit', async (e) => {
      e.preventDefault();
      
      const file = fileInput.files?.[0];
      if (!file) return;

      try {
        submitButton.disabled = true;
        submitButton.textContent = 'Subiendo...';

        // 1. Subir el archivo a Supabase Storage
        const fileName = `${Date.now()}-${file.name}`;
        const { error: uploadError } = await supabase.storage
          .from('fotos')
          .upload(fileName, file);

        if (uploadError) throw uploadError;

        // 2. Obtener la URL pública
        const { data } = supabase.storage
          .from('fotos')
          .getPublicUrl(fileName);
        const publicUrl = data.publicUrl;

        // 3. Guardar la información en la base de datos
        const { error: dbError } = await supabase
          .from('photos')
          .insert([{ url: publicUrl }]);

        if (dbError) throw dbError;

        // 4. Agregar la nueva foto al grid
        const photoDiv = document.createElement('div');
        photoDiv.className = 'relative aspect-square bg-white/10 rounded-lg overflow-hidden group';
        photoDiv.innerHTML = `
          <img 
            src="${publicUrl}" 
            alt="Nuestra foto" 
            class="w-full h-full object-cover"
            loading="lazy"
          />
          <div class="absolute inset-0 bg-black/60 opacity-0 group-hover:opacity-100 transition-opacity">
            <p class="absolute bottom-4 left-4 text-white text-sm">
              ${new Date().toLocaleDateString()}
            </p>
          </div>
        `;

        // Insertar al principio del grid
        photosGrid.insertBefore(photoDiv, photosGrid.firstChild);

        // Resetear el formulario
        form.reset();
        submitButton.textContent = 'Subir Foto';

      } catch (error) {
        console.error('Error:', error);
        alert('Error al subir la foto. Por favor, intenta de nuevo.');
        submitButton.textContent = 'Subir Foto';
      } finally {
        submitButton.disabled = true;
        fileInput.value = '';
      }
    });
  }
</script>
