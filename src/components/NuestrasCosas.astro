---
import { createClient } from '@supabase/supabase-js';

// Crear el cliente aqu√≠ para asegurar que funcione tanto en local como en producci√≥n
const supabase = createClient(
  import.meta.env.PUBLIC_SUPABASE_URL,
  import.meta.env.PUBLIC_SUPABASE_ANON_KEY
);

// === Obtener todas las fotos al cargar la p√°gina ===
let { data: photos, error: fetchError } = await supabase
  .from('photos')
  .select('*')
  .order('created_at', { ascending: false });

if (fetchError) {
  console.error('‚ùå Error al cargar fotos:', fetchError);
}

const photosWithPublicUrls = photos?.map(photo => ({
  ...photo,
  url: supabase.storage.from('fotos').getPublicUrl(photo.url).data.publicUrl
}));

console.log('üì∏ Fotos cargadas:', photosWithPublicUrls);
---

<section class="min-h-screen p-8">
  <div class="max-w-6xl mx-auto">
    <h1 class="text-3xl font-semibold text-white mb-8 text-center">Nuestras Fotos</h1>

    <!-- Formulario para subir fotos -->
    <div class="mb-12 bg-white/10 p-6 rounded-lg flex flex-col items-center gap-4">
      <!-- Bot√≥n personalizado para seleccionar archivo -->
      <div
        id="custom-upload"
        class="bg-purple-600 text-white px-6 py-4 rounded-lg text-center cursor-pointer hover:bg-purple-700 transition-colors"
      >
        Seleccionar Foto
      </div>

      <!-- Input oculto -->
      <input 
        type="file" 
        accept="image/*"
        id="file-input"
        class="hidden"
      />

      <!-- Bot√≥n para subir -->
      <button
        type="button"
        id="submit-button"
        class="bg-white text-purple-600 px-8 py-3 rounded-lg font-medium hover:bg-purple-100 transition-colors disabled:opacity-50"
        disabled
      >
        Subir Foto
      </button>
    </div>

    <!-- Grid de fotos -->
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6" id="photos-grid">
      {photosWithPublicUrls?.map((photo) => (
        <div class="relative aspect-square bg-white/10 rounded-lg overflow-hidden group">
          <img 
            src={photo.url} 
            alt="Nuestra foto" 
            class="w-full h-full object-cover"
            loading="lazy"
            onerror="this.style.display='none'; console.error('Error cargando imagen:', this.src);"
          />
          <div class="absolute inset-0 bg-black/60 opacity-0 group-hover:opacity-100 transition-opacity">
            <p class="absolute bottom-4 left-4 text-white text-sm">
              {new Date(photo.created_at).toLocaleDateString()}
            </p>
          </div>
        </div>
      ))}
    </div>
  </div>
</section>

<script type="module">
  import { createClient } from '@supabase/supabase-js';

  const supabase = createClient(
    import.meta.env.PUBLIC_SUPABASE_URL,
    import.meta.env.PUBLIC_SUPABASE_ANON_KEY
  );

  const fileInput = document.getElementById('file-input');
  const customUpload = document.getElementById('custom-upload');
  const submitButton = document.getElementById('submit-button');
  const photosGrid = document.getElementById('photos-grid');

  // Permitir abrir el selector de archivos
  customUpload.addEventListener('click', () => fileInput.click());

  // Habilitar el bot√≥n despu√©s de seleccionar archivo (compatible con m√≥viles)
  fileInput.addEventListener('change', () => {
    setTimeout(() => {
      submitButton.disabled = !fileInput.files?.length;
    }, 300);
  });

  // Subir la foto
  submitButton.addEventListener('click', async () => {
    const file = fileInput.files?.[0];
    if (!file) return;

    try {
      submitButton.disabled = true;
      submitButton.textContent = 'Subiendo...';

      const fileName = `${Date.now()}-${file.name}`;
      const { error: uploadError } = await supabase.storage
        .from('fotos')
        .upload(fileName, file, {
          cacheControl: '3600',
          upsert: false
        });

      if (uploadError) throw new Error(uploadError.message);

      const { data: urlData } = supabase.storage
        .from('fotos')
        .getPublicUrl(fileName);

      if (!urlData) throw new Error('No se pudo obtener la URL p√∫blica');

      const now = new Date().toISOString();

      const { error: dbError } = await supabase
        .from('photos')
        .insert([{ url: fileName, created_at: now }]);

      if (dbError) {
        await supabase.storage.from('fotos').remove([fileName]);
        throw new Error('Error al guardar en la base de datos');
      }

      // Agregar la foto al grid sin recargar
      const photoDiv = document.createElement('div');
      photoDiv.className = 'relative aspect-square bg-white/10 rounded-lg overflow-hidden group';
      photoDiv.innerHTML = `
        <img src="${urlData.publicUrl}" alt="Nuestra foto"
          class="w-full h-full object-cover" loading="lazy" />
        <div class="absolute inset-0 bg-black/60 opacity-0 group-hover:opacity-100 transition-opacity">
          <p class="absolute bottom-4 left-4 text-white text-sm">
            ${new Date().toLocaleDateString()}
          </p>
        </div>
      `;
      photosGrid.insertBefore(photoDiv, photosGrid.firstChild);

      form?.reset?.();
      fileInput.value = '';
      submitButton.textContent = 'Subir Foto';
    } catch (err) {
      console.error('‚ùå Error subiendo foto:', err);
      alert('Error al subir la foto. Por favor, intenta de nuevo.');
    } finally {
      submitButton.disabled = false;
    }
  });
</script>
